# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - prefer_const_constructors_in_immutables
    - prefer_const_constructors
    - prefer_single_quotes
    - avoid_type_to_string
    - cancel_subscriptions
    - close_sinks
    - no_logic_in_create_state
    - unnecessary_statements
    - prefer_void_to_null
    - prefer_relative_imports
    - empty_statements
    - avoid_setters_without_getters
    - avoid_renaming_method_parameters
    - avoid_init_to_null
    - avoid_field_initializers_in_const_classes
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_catching_errors
    - avoid_catches_without_on_clauses
    - avoid_annotating_with_dynamic
    - annotate_overrides
    - always_put_required_named_parameters_first
    - avoid_single_cascade_in_expression_statements
    - prefer_conditional_assignment
    - prefer_asserts_with_message
    - only_throw_errors
    - lines_longer_than_80_chars
    - implementation_imports
    - eol_at_end_of_file
    - exhaustive_cases
    - empty_constructor_bodies
    - directives_ordering
    - camel_case_extensions
    - camel_case_types
    - await_only_futures
    - avoid_unused_constructor_parameters
    - avoid_unnecessary_containers
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - sort_pub_dependencies
    - unnecessary_await_in_return
    - use_rethrow_when_possible

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
